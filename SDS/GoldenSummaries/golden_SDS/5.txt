Inspired by Martin Oberhuber's mail about his \"lsc\" script for counting lines in a patch[1], I though that it maybe be worthwhile to embed such thing in the Apply Patch wizard itself.
imo using regexp should be enough here, especially due to the fact that we don't want to make any additional dependencies.
So, my proposal is to allow to specify a regexp rule for lines that should be count as a \"real contribution\".
This is what first came to my head:
which means \"Count only lines starting with single '+' and a space.
The line must also have at least one non-whitespace character\".
All lines that match the above pattern would be sum up and the info would be displayed somewhere on the Apply Patch wizard.
Actually, couldn't your regex even be simpler, say
And actually, if the wizard counts added lines, why shouldn't it also count removed lines?
I'd guess that the regex for removed lines could just be the same as for added lines but the + replaced by a -; and, files removed entirely should contribute the entire number of lines they had before (I believe that the old contents is
Fix that matches all lines from a patch against given regexps (one for added lines and one for removed).
Patterns can be changed on General > Compare/Patch pref page.
I decided to leave them blank by default, so I don't need to worry about different diff output formats which are out there.
The latest patch ensures, that when no regular expressions is provided, the patcher will use internal patterns to distinguish which lines have been added or deleted.
However, this will work only for patches in unified and context diff output format.
Your dialog counts 207 added and 29 removed lines, but my script only counts 151 added lines.
It looks like you are also counting empty lines, which doesn't seem overly useful to me.
I've added there two fields where you can customize the way this simple mechanism works.
I agree that we cannot count empty comments here by default, because comment styles differ by language.
Filter:         /-\\[+-]\\s*$     //Filter for lines to not count, e.g. empty lines
Actually, it might be a good idea to have one additional kind of Regex pattern in the Preferences, which acts as a filter -- suggested tooltip behind //:
Martin, I see your point when you're saying that the \"common standard\" should be as good as possible, however I would rather not to filter any lines from a patch when parsing. Here are the approaches so far:
Rejected.
The output would be something like this \"Patch contains X added and Y removed lines + Z added lines which are empty\". Again, the user could provide his own patterns...
Regarding the filter idea: it sounds good to me, but I think we should move the discussion about it to a separate bug.
1) Use only given filters, by default no counting will be made.
2) By default count lines using the simple patterns, which are currently used when parsing a patch (ie \"+\" and \"-\"), this can be modified in the pref page.
3) By default count lines using more sophisticated patterns like excluding empty lines.
4) By default count lines using both simple and sophisticated patterns at the same time.
