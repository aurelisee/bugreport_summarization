When a calendar to which I am subscribed no longer exists, Lightning will try indefinitely to reach it and use 100% of my CPU. This, despite the 404 results it receives.
A propfind is executed on the resource, resulting in a 404 error code.
Then the loop continues with a new propfind...
Expected Results:
I would expect Lightning to stop trying to reach the calendar collection as
soon as it receives the 404 result.
When using the display of source and destination ip/port in tcpflow, I notice the Lightning side always has a different port, which leads me to think that many connections are occuring at the same time.
The problem occurs when safeRefresh() is called from calDavCalendar.js.
In there, we have the following condition:
if (!this.mCtag || !this.mFirstRefreshDone) {
var refreshEvent = this.prepRefresh();
this.getUpdatedItems(refreshEvent, aChangeLogListener);
this.mFirstRefreshDone is false because since the calendar was removed, we never got a chance to complete the call to getCalendarData() nor checkDavResourceType() (see https://bugzilla.mozilla.org/show_bug.cgi?id=463961 for that one...).
So, we'll enter into an infinite loop because getUpdatedItems() calls right at the beginning checkDavResourceType() since the calendar was marked as disabled.
But, checkDavResourceType() doesn't check for the 404 error code.
Proposed fix
This bug is critical in order to avoid an endless loop and also in order to avoid generating _tons_ of HTTP requests to the CalDAV server (up to 10-20 per second).
-> FIXED
User-Agent: Mozilla/5.0 (X11; U; Linux i686 (x86_64); fr; rv:1.8.1.12)
1. create a calendar on your server
2. subscribe to it via Lightning
3. quit Thunderbird
4. erase the calendar from your server
5. relaunch Thunderbird
User-Agent:       Mozilla/5.0 (X11; U; Linux x86_64; fr-FR; rv:1.8.1.13) Gecko/20080311 Iceweasel/2.0.0.13 (Debian-2.0.0.13-1)
Build Identifier: 0.8 (2008033118)


