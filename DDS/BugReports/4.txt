Type: <b>Bug</b>
CC: @isidorn
As of version 1.70, some buttons on toolbars appear to be unlabeled, or if they have, they are not being read by orca.
I started by observing this behavior in java projects toolbar but soon realized that it also happens in other places such as timeline actions toolbar.
This problem does not happen in VSCode version 1.69.
VS Code version: Code - Insiders 1.70.0-insider (62469028a6dce9db5b7c4639be7f447f4ab0e35c, 2022-07-21T05:18:49.778Z)
OS version: Linux x64 5.18.11-200.fc36.x86_64
Modes:
<details>
<summary>System Info</summary>
|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (8 x 1800)|
|GPU Status|2d_canvas: enabled
canvas_oop_rasterization: disabled_off
direct_rendering_display_compositor: disabled_off_ok
gpu_compositing: enabled
multiple_raster_threads: enabled_on
opengl: enabled_on
rasterization: enabled
raw_draw: disabled_off_ok
skia_renderer: enabled_on
video_decode: disabled_software
video_encode: disabled_software
vulkan: disabled_off
webgl: enabled
webgl2: enabled|
|Load (avg)|4, 5, 5|
|Memory (System)|7.41GB (0.14GB free)|
|Process Argv|--unity-launch /data/fontes-java/minipov --crash-reporter-id c8372e3c-5150-4141-a30d-681ebeb24c25|
|Screen Reader|yes|
|VM|0%|
|DESKTOP_SESSION|gnome-xorg|
|XDG_CURRENT_DESKTOP|GNOME|
|XDG_SESSION_DESKTOP|gnome-xorg|
|XDG_SESSION_TYPE|x11|
</details><details><summary>Extensions (31)</summary>
Extension|Author (truncated)|Version
---|---|---
doxdocgen|csc|1.4.0
rest-client|hum|0.25.0
better-cpp-syntax|jef|1.15.19
azure-pipelines|ms-|1.208.0
vscode-docker|ms-|1.22.1
csharp|ms-|1.25.0
vscode-kubernetes-tools|ms-|1.3.10
remote-containers|ms-|0.243.0
remote-ssh|ms-|0.85.2022071315
remote-ssh-edit|ms-|0.80.0
azure-account|ms-|0.11.0
cmake-tools|ms-|1.11.26
cpptools|ms-|1.11.3
cpptools-extension-pack|ms-|1.2.0
makefile-tools|ms-|0.5.0
vsliveshare|ms-|1.0.5641
vscode-boot-dev-pack|Piv|0.1.0
vscode-spring-boot|Piv|1.36.0
fabric8-analytics|red|0.3.6
java|red|1.9.2022072004
vscode-yaml|red|1.9.1
sonarlint-vscode|Son|3.7.0
cmake|twx|0.0.17
vscodeintellicode|Vis|1.2.22
vscode-java-debug|vsc|0.42.2022071905
vscode-java-dependency|vsc|0.20.2022072100
vscode-java-pack|vsc|0.24.2022072000
vscode-java-test|vsc|0.35.2022072002
vscode-maven|vsc|0.36.2022072003
vscode-spring-boot-dashboard|vsc|0.5.0
vscode-spring-initializr|vsc|0.10.0
(1 theme extensions excluded)
</details><details>
<summary>A/B Experiments</summary>
```
vsliv695:30137379
vsins829:30139715
vsliv368cf:30146710
vsreu685:30147344
python383cf:30185419
vspor879:30202332
vspor708:30202333
vspor363:30204092
vswsl492cf:30256198
vstes627cf:30244335
vslsvsres303:30308271
pythonvspyl392:30422396
pythontb:30258533
pythonptprofiler:30281269
vshan820:30294714
pythondataviewer:30285072
vscod805cf:30301675
bridge0708:30335490
bridge0723:30353136
cmake_vspar411cf:30525689
vsaa593cf:30376535
pythonvs932:30404738
wslgetstarted:30449409
vscscmwlcmt:30465136
cppdebug:30492333
pylanb8912:30522163
vsclangdf:30492506
841h4636:30532337
```
</details>
<!-- generated by issue reporter -->We have written the needed data into your clipboard because it was too large to send
Please paste.
Looks like you might own the timeline view @lszomoru?
@roblourens, Jackson used to own the timeline view itself
I own the git timeline provider
The problem also manifests itself in outline actions, time line actions, and java projects action.
The lack of labels directly impacts accessibility, at least for those who use orca as a screen reader
I don't know if the problem affects those who use NVDA.
I use NVDA and it appears nearly all toolbar buttons are now unlabelled, making it hard to do anything I'm used to doing.
This is now the second release in a row with a major accessibility bug, caught in insiders, and then pushed to production anyway
@isidorn can you assist here?
@jvesouza thanks for using insiders and for filling this
Sorry for the slow response I was on vacation.
I can reproduce this on all platforms
It is related to what html element inside the action gets focus
It seems like that changed, so the element that gets focus now has no aria-label set
Investigating
We will push a fix for this as part of the recovery release.
There is a regression that the html focus is set on the inner element of the action view item
I am not sure what change made this happen, but overall I think it makes sense
What is missing is the aria-label, so this commit sets the aria-label on that inner element.
I have verified that this indeed fixes the regression
fixes #155880
I have create a PR with the fix
VS Code insiders from Monday will contain the fix
And VS Code stable recovery release will also contain it - this should happen some time next week (most likely Thursday).
Sorry about this regression.
